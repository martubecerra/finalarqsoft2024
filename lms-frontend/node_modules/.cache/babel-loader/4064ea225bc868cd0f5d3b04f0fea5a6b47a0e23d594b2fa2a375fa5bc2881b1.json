{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL;\nconst getCourses = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/courses`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching courses:', error);\n    throw error;\n  }\n};\nconst getCourseById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/courses/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching course:', error);\n    throw error;\n  }\n};\nconst createCourse = async (course, token) => {\n  try {\n    const response = await axios.post(`${API_URL}/courses`, course, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating course:', error);\n    throw error;\n  }\n};\nconst updateCourse = async (id, course, token) => {\n  try {\n    const response = await axios.put(`${API_URL}/courses/${id}`, course, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating course:', error);\n    throw error;\n  }\n};\nconst deleteCourse = async (id, token) => {\n  try {\n    await axios.delete(`${API_URL}/courses/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    console.error('Error deleting course:', error);\n    throw error;\n  }\n};\nconst getUserCourses = async token => {\n  try {\n    const response = await axios.get(`${API_URL}/my-courses`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user courses:', error);\n    throw error;\n  }\n};\nconst enrollInCourse = async (courseId, token) => {\n  try {\n    const response = await axios.post(`${API_URL}/enroll`, {\n      course_id: courseId\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error enrolling in course:', error);\n    throw error;\n  }\n};\nconst unenrollFromCourse = async (courseId, token) => {\n  try {\n    const response = await axios.post(`${API_URL}/unenroll`, {\n      course_id: courseId\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error unenrolling from course:', error);\n    throw error;\n  }\n};\nconst addComment = async (courseId, commentData, token) => {\n  try {\n    const response = await axios.post(`${API_URL}/${courseId}/comments`, {\n      content: commentData.comment\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error adding comment:', error);\n    throw error;\n  }\n};\nconst getComments = async (courseId, token) => {\n  try {\n    const response = await axios.get(`${API_URL}/courses/${courseId}/comments`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching comments:', error);\n    throw error;\n  }\n};\nconst uploadFile = async (courseId, formData, token) => {\n  try {\n    const response = await axios.post(`${API_URL}/courses/${courseId}/files`, formData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error uploading file:', error);\n    throw error;\n  }\n};\nconst getFiles = async (courseId, token) => {\n  try {\n    const response = await axios.get(`${API_URL}/courses/${courseId}/files`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching files:', error);\n    throw error;\n  }\n};\nexport { getCourses, getCourseById, createCourse, updateCourse, deleteCourse, getUserCourses, enrollInCourse, unenrollFromCourse, addComment, getComments, uploadFile, getFiles };","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getCourses","response","get","data","error","console","getCourseById","id","createCourse","course","token","post","headers","Authorization","updateCourse","put","deleteCourse","delete","getUserCourses","enrollInCourse","courseId","course_id","unenrollFromCourse","addComment","commentData","content","comment","getComments","uploadFile","formData","getFiles"],"sources":["C:/Users/martu/OneDrive/Documentos/UCC tercero/Arquitectura de software I/LISTOS/trabajofinal-arqsoft1-2024 - final/lms-frontend/src/services/courseService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nconst getCourses = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/courses`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching courses:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getCourseById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/courses/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching course:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst createCourse = async (course, token) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/courses`, course, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating course:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst updateCourse = async (id, course, token) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/courses/${id}`, course, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating course:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst deleteCourse = async (id, token) => {\r\n  try {\r\n    await axios.delete(`${API_URL}/courses/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Error deleting course:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getUserCourses = async (token) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/my-courses`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user courses:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst enrollInCourse = async (courseId, token) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/enroll`, { course_id: courseId }, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error enrolling in course:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst unenrollFromCourse = async (courseId, token) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/unenroll`, { course_id: courseId }, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error unenrolling from course:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst addComment = async (courseId, commentData, token) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/${courseId}/comments`, { content: commentData.comment }, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error adding comment:', error);\r\n    throw error;\r\n  }\r\n};\r\nconst getComments = async (courseId, token) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/courses/${courseId}/comments`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching comments:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst uploadFile = async (courseId, formData, token) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/courses/${courseId}/files`, formData, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error uploading file:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getFiles = async (courseId, token) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/courses/${courseId}/files`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching files:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport {\r\n  getCourses,\r\n  getCourseById,\r\n  createCourse,\r\n  updateCourse,\r\n  deleteCourse,\r\n  getUserCourses,\r\n  enrollInCourse,\r\n  unenrollFromCourse,\r\n  addComment,\r\n  getComments,\r\n  uploadFile,\r\n  getFiles\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}